#!/bin/sh
#
# Here are all parameters to set before running the script.

# Set backups destination directory (full path) :
BACKUP_DIR=/data/backups

# Set Snapshot & archives folder's name :
# No need to set full path here.
SNAP_DIR=snapshots
ARCH_DIR=archives

# Simple copy or archive ( Copy / Archive ) :
BCK_METHOD=Archive

# Use compresion :
# - No compression = No
# - Light compression = gzip
# - Medium compression = bzip2
# - High compression = lzma
COMPRESSION=lzma

# Set folders to backup :
BCK_TARGET[0]=/root
BCK_TARGET[1]=/home

# Set backup exclusions :
BCK_EXCLUDE[0]="*temp*"
BCK_EXCLUDE[1]="*tmp*"
BCK_EXCLUDE[2]="*trashbin*"
BCK_EXCLUDE[3]="*.cache*"

# Set the day you want a full backup ( week / month ) :
# FULL_BCK_CYCLE may be "week" or "month".
# - If FULL_BCK_CYCLE=week, then FULL_BCK_DAY is the day of week (1..7); 1 is Monday.
# - If FULL_BCK_CYCLE=month, then FULL_BCK_DAY is the day of the month.
FULL_BCK_CYCLE=week
FULL_BCK_DAY=7

# full backup = cold backup ? ( Yes / No ) :
COLD_BCK=Yes

# Services to stop in order to do the cold backup :
COLD_SERVICE[0]=docker

# Set the number of cycles you want as retention :
# Every new cycle will start by archiving previous one. 
# /!\ Archives older than $RETENTION cycles will be DESTROYED.
RETENTION=5

# Send a message through telegram to confirm backup was made ?
# Please see ../telegram/README.md for details.
SEND_TELEGRAM_MSG=Yes

# Synchronize backups with rsync ( Yes / No ) :
SYNCRONIZATION=Yes

# Set folders where to replicate backups :
# For remote synchronization, you need to you have SSH access verified on between the two machines.
BCK_SYNC[0]=/tmp
BCK_SYNC[1]=username@remote_host:destination/directory

# Copy remote host backups on this server ( Yes / No ) ?
DIST_BCK=No

# Set remote host hostname :
DIST_HOST=
